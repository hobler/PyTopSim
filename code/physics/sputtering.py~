"""
Created on Dec 10, 2009

@author: Thomas Zahel
"""
from numpy import array
from parameters import SPUTTER_YIELD_FILES, ISOTROPIC, ION, ENERGY, N
from interpolation import interpolate_linear1d
from math import cos, pi
import numpy as np 

sputter_yield_table = dict()


def read_sputtering_yield_tables():        
    for file in SPUTTER_YIELD_FILES:
        f = open(file, 'r')        
        parameters = f.readline().split()
        #comment char first word?
        ion = parameters[1]
        energy = parameters[2]
        material = parameters[3]            
        if ion == ION and energy == ENERGY: 
            sputter_yield_table[material] = list()
            for line in f.readlines():            
                l = line.split() #read angle and yield                        
                sputter_yield_table[material].append((float(l[0]), float(l[1])))
            f.close()

def get_sputtering_yield_v(material, theta):
    sputter_yield = list()
    
    for i in range(len(material)):
        try:
            table = array(sputter_yield_table[material[i]])
            angle = table[:,0]
            yield_ = table[:,1]
            sputter_yield.append(interpolate_linear1d(angle, yield_, theta[i]))                        
        except KeyError:
            print 'No sputter yield table found for this Material-Ion-Energy combination'
            
    return np.array(sputter_yield)


def get_sputtering_angular_distribution(material, alpha, phi):    
    return (np.cos(alpha)**N)/pi


def read_sputtering_angle_distribution_tables():
    pass

#def get_sputtering_yield(material, theta):
#    try:
#        table = array(sputter_yield_table[material])
#        angle = table[:,0]
#        yield_ = table[:,1]
#        sputter_yield = interpolate_linear1d(angle, yield_, theta)            
#        return sputter_yield
#    except KeyError:
#        print 'No sputter yield table found for this Material-Ion-Energy combination'        



#def get_sputtering_yield_old(material, theta):
#    sputter_yield = 0.0
#    if material == 'Si':
#        sputter_yield = 2.6
#    elif material == 'SiO2':
#        sputter_yield = 15.7            
#   return sputter_yield

